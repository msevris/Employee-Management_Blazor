@inject NavigationManager NavigationManager;

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Manage</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" @onclick="()=> expandSubMenu= !expandSubMenu">
                <span class="oi oi-person" aria-hidden="true"></span>Employee
            </NavLink>
            @if (expandSubMenu)
            {
<ul class="nav flex-column">
    <li class="nav-item px-3">
        <NavLink class="nav-link" href="/editemployee" @onclick="HandleClick" Match="NavLinkMatch.All">
            <span class="oi oi-file" aria-hidden="true"></span> Create
        </NavLink>
    </li>
    <li class="nav-item px-3">
        <NavLink class="nav-link" href="/editemployee/1" Match="NavLinkMatch.All">
            <span class="oi oi-pencil" aria-hidden="true"></span> Edit
        </NavLink>
    </li>
</ul>}
        </li>

    </ul>
</div>

@code { private bool collapseNavMenu = true;
    private bool expandSubMenu;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void HandleClick()
    {
        NavigationManager.NavigateTo("editemployee", true);
    } }
